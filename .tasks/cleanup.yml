version: '3'

vars:
  # Redpanda Cloud credentials
  REDPANDA_CLIENT_ID: '{{.REDPANDA_CLIENT_ID | default ""}}'
  REDPANDA_CLIENT_SECRET: '{{.REDPANDA_CLIENT_SECRET | default ""}}'
  REDPANDA_CLOUD_ENVIRONMENT: '{{.REDPANDA_CLOUD_ENVIRONMENT | default "prod"}}'

  # AWS cleanup parameters
  VPC_ID: '{{.VPC_ID | default ""}}'
  AWS_REGION: '{{.AWS_REGION | default "us-east-2"}}'
  COMMON_PREFIX: '{{.COMMON_PREFIX | default "redpanda"}}'

  # GCP cleanup parameters
  PROJECT_ID: '{{.PROJECT_ID | default ""}}'
  GCP_REGION: '{{.GCP_REGION | default "us-central1"}}'

tasks:
  redpanda:status:
    desc: "Show current state of test resources with 'tfrp-' prefix"
    cmds:
      - |
        REDPANDA_CLIENT_ID="{{.REDPANDA_CLIENT_ID}}" \
        REDPANDA_CLIENT_SECRET="{{.REDPANDA_CLIENT_SECRET}}" \
        REDPANDA_CLOUD_ENVIRONMENT="{{.REDPANDA_CLOUD_ENVIRONMENT}}" \
        go run ./scripts/cleanup_test_resources.go --status

  redpanda:
    desc: "Delete test resources with 'tfrp-' prefix from Redpanda Cloud"
    cmds:
      - |
        REDPANDA_CLIENT_ID="{{.REDPANDA_CLIENT_ID}}" \
        REDPANDA_CLIENT_SECRET="{{.REDPANDA_CLIENT_SECRET}}" \
        REDPANDA_CLOUD_ENVIRONMENT="{{.REDPANDA_CLOUD_ENVIRONMENT}}" \
        go run ./scripts/cleanup_test_resources.go

  redpanda:dry:
    desc: "Dry run - show what test resources would be deleted (does not actually delete)"
    cmds:
      - |
        REDPANDA_CLIENT_ID="{{.REDPANDA_CLIENT_ID}}" \
        REDPANDA_CLIENT_SECRET="{{.REDPANDA_CLIENT_SECRET}}" \
        REDPANDA_CLOUD_ENVIRONMENT="{{.REDPANDA_CLOUD_ENVIRONMENT}}" \
        go run ./scripts/cleanup_test_resources.go --dry-run

  aws:
    desc: "Delete AWS resources created by terraform-aws-redpanda-byovpc module"
    dir: scripts/cleanup-redpanda-byovpc
    cmds:
      - |
        go run main.go \
          --common-prefix "{{.COMMON_PREFIX}}" \
          --region "{{.AWS_REGION}}" \
          {{if .VPC_ID}}--vpc-id "{{.VPC_ID}}"{{end}}

  aws:ci:
    desc: "Delete AWS resources with VPC auto-detection (auto-approves)"
    dir: scripts/cleanup-redpanda-byovpc
    cmds:
      - |
        go run main.go \
          --common-prefix "{{.COMMON_PREFIX}}" \
          --region "{{.AWS_REGION}}" \
          --auto-detect-vpc \
          --auto-approve

  aws:dry:
    desc: "Dry run - show what AWS resources would be deleted (does not actually delete)"
    dir: scripts/cleanup-redpanda-byovpc
    cmds:
      - |
        go run main.go \
          --common-prefix "{{.COMMON_PREFIX}}" \
          --region "{{.AWS_REGION}}" \
          {{if .VPC_ID}}--vpc-id "{{.VPC_ID}}"{{end}} \
          --dry-run

  aws:vpcs:
    desc: "List non-default VPCs with 'network-' prefix across all AWS regions"
    dir: scripts/cleanup-redpanda-byovpc
    cmds:
      - |
        go run main.go \
          --list-vpcs

  gcp:
    desc: "Delete GCP resources created by terraform-gcp-redpanda-byovpc module"
    dir: scripts/cleanup-gcp-redpanda-byovpc
    cmds:
      - |
        go run main.go \
          --project-id "{{.PROJECT_ID}}" \
          --common-prefix "{{.COMMON_PREFIX}}" \
          --region "{{.GCP_REGION}}"

  gcp:ci:
    desc: "Delete GCP resources (auto-approves without confirmation)"
    dir: scripts/cleanup-gcp-redpanda-byovpc
    cmds:
      - |
        go run main.go \
          --project-id "{{.PROJECT_ID}}" \
          --common-prefix "{{.COMMON_PREFIX}}" \
          --region "{{.GCP_REGION}}" \
          --auto-approve \
          --use-gcp-creds-base64

  gcp:dry:
    desc: "Dry run - show what GCP resources would be deleted (does not actually delete)"
    dir: scripts/cleanup-gcp-redpanda-byovpc
    cmds:
      - |
        go run main.go \
          --project-id "{{.PROJECT_ID}}" \
          --common-prefix "{{.COMMON_PREFIX}}" \
          --region "{{.GCP_REGION}}" \
          --dry-run

  default:
    desc: "Show available cleanup commands"
    cmds:
      - echo "Available cleanup commands:"
      - echo ""
      - echo "Redpanda Cloud:"
      - echo "  task cleanup:redpanda:status  - Show test resources"
      - echo "  task cleanup:redpanda:dry     - Dry run cleanup"
      - echo "  task cleanup:redpanda         - Delete test resources"
      - echo ""
      - echo "AWS BYOVPC:"
      - echo "  task cleanup:aws:vpcs                             - List non-default VPCs across all regions"
      - echo "  task cleanup:aws:dry VPC_ID=vpc-xxx               - Dry run AWS cleanup"
      - echo "  task cleanup:aws VPC_ID=vpc-xxx                   - Delete AWS resources"
      - echo "  task cleanup:aws:ci                               - Delete AWS resources (CI mode, auto-detect VPCs)"
      - echo "  task cleanup:aws VPC_ID=vpc-xxx AWS_REGION=us-west-2  - With custom region"
      - echo ""
      - echo "GCP BYOVPC:"
      - echo "  task cleanup:gcp:dry PROJECT_ID=my-project         - Dry run GCP cleanup"
      - echo "  task cleanup:gcp PROJECT_ID=my-project             - Delete GCP resources"
      - echo "  task cleanup:gcp:ci PROJECT_ID=my-project          - Delete GCP resources (CI mode, auto-approve)"
      - echo "  task cleanup:gcp PROJECT_ID=my-project GCP_REGION=us-west1  - With custom region"
      - echo ""
      - echo "Environment variables:"
      - echo "  REDPANDA_CLIENT_ID, REDPANDA_CLIENT_SECRET - Required for Redpanda Cloud"
      - echo "  REDPANDA_CLOUD_ENVIRONMENT - Optional, defaults to 'prod'"
      - echo "  VPC_ID - Optional for AWS cleanup, skips VPC resources if not provided"
      - echo "  AWS_REGION - Optional, defaults to 'us-east-1'"
      - echo "  PROJECT_ID - Required for GCP cleanup"
      - echo "  GCP_REGION - Optional, defaults to 'us-central1'"
      - echo "  COMMON_PREFIX - Optional, defaults to 'redpanda'"
